# Opcode class
CLASS	LD	0x00
CLASS	LDX	0x01
CLASS	ST	0x02
CLASS	STX	0x03
CLASS	ALU	0x04
CLASS	JMP	0x05
CLASS	ALU64	0x07

# Modifier and suffix
SRC	I	0x00	_IMM
SRC	R	0x08	_REG
SRC	N	0x00
SIZE	W	0x00	W
SIZE	H	0x08	H
SIZE	B	0x10	B
SIZE	D	0x18	DW

# class, modifier, name, opcode, op, stype, dtype
ALU	IR	ADD	0x00	B	+	s	s
ALU	IR	SUB	0x10	B	-	s	s
ALU	IR	MUL	0x20	B	*	s	s
ALU	IR	DIV	0x30	B	/	s	s
ALU	IR	OR	0x40	B	|	s	s
ALU	IR	AND	0x50	B	&	s	s
ALU	IR	LSH	0x60	B	<<	u	u
ALU	IR	RSH	0x70	B	>>	u	u
ALU	N	NEG	0x80	U	-	s	s
ALU	IR	MOD	0x90	B	%	u	u
ALU	IR	XOR	0xa0	B	^	s	s
ALU	IR	MOV	0xb0	U	+	s	s
ALU	IR	ARSH	0xc0	B	>>	s	s
ALU	N	LE	0xd0	LE
ALU	N	BE	0xd0	BE

ALU64	IR	ADD64	0x00	B	+	s	s
ALU64	IR	SUB64	0x10	B	-	s	s
ALU64	IR	MUL64	0x20	B	*	s	s
ALU64	IR	DIV64	0x30	B	/	s	s
ALU64	IR	OR64	0x40	B	|	s	s
ALU64	IR	AND64	0x50	B	&	s	s
ALU64	IR	LSH64	0x60	B	<<	u	u
ALU64	IR	RSH64	0x70	B	>>	u	u
ALU64	N	NEG64	0x80	U	-	s	s
ALU64	IR	MOD64	0x90	B	%	u	u
ALU64	IR	XOR64	0xa0	B	^	s	s
ALU64	IR	MOV64	0xb0	U	+	s	s
ALU64	IR	ARSH64	0xc0	B	>>	s	s

JMP	N	JA	0x00	B	>	u
JMP	IR	JEQ	0x10	B	==	u
JMP	IR	JGT	0x20	B	>	u
JMP	IR	JGE	0x30	B	>=	u
JMP	IR	JSET	0x40	B	&	s
JMP	IR	JNE	0x50	B	!=	u
JMP	IR	JSGT	0x60	B	>	s
JMP	IR	JSGE	0x70	B	>=	s
JMP	N	CALL	0x80
JMP	N	EXIT	0x90
JMP	IR	JLT	0xa0	B	<	u
JMP	IR	JLE	0xb0	B	<=	u
JMP	IR	JSLT	0xc0	B	<	s
JMP	IR	JSLE	0xd0	B	<=	s

LDX	WHBD	LDX	0x60
LD	D	LD	0x00
STX	WHBD	STX	0x60
ST	WHBD	ST	0x00
